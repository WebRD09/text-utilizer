{"version":3,"sources":["components/Navbar.js","components/Textform.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","href","type","id","onClick","changemode","Textform","useState","text","setText","characters","length","totalWords","split","words","forEach","element","value","onChange","e","target","rows","upperCase","toUpperCase","lowerCase","toLowerCase","sentenseCase","substr","allWords","validWords","push","titlCase","document","getElementById","select","navigator","clipboard","writeText","join","App","mode","setmode","body","style","backgroundColor","color","innerText","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.185934aa.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          Text-Utilizer\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item active\">\r\n              <a className=\"nav-link\" href=\"/\">\r\n                Home <span className=\"sr-only\">(current)</span>\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/\">\r\n                About\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/\">\r\n                Contact\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          <button\r\n            className=\"btn btn-secondary mr-2\"\r\n            id=\"mode\"\r\n            onClick={props.changemode}\r\n          >\r\n            Dark Mode\r\n          </button>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function Textform() {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const changeText = (e) => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  const convertToUppercase = () => {\r\n    let upperCase = text.toUpperCase();\r\n    setText(upperCase);\r\n  };\r\n\r\n  const convertToLowercase = () => {\r\n    let lowerCase = text.toLowerCase();\r\n    setText(lowerCase);\r\n  };\r\n\r\n  const convertToSentense = () => {\r\n    let sentenseCase = text[0].toUpperCase() + text.substr(1).toLowerCase();\r\n    setText(sentenseCase);\r\n  };\r\n\r\n  const convertToTitlecase = () => {\r\n    let allWords = text.split(\" \");\r\n    let validWords = [];\r\n    allWords.forEach((element) => {\r\n      if (element.length > 0) {\r\n        validWords.push(element);\r\n      }\r\n    });\r\n\r\n    let titlCase = \"\";\r\n    validWords.forEach((element) => {\r\n      titlCase +=\r\n        element[0].toUpperCase() + element.substr(1).toLowerCase() + \" \";\r\n    });\r\n\r\n    setText(titlCase);\r\n  };\r\n\r\n  const copyText = () => {\r\n    let text = document.getElementById(\"text\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n  };\r\n\r\n  const removeSpace = () => {\r\n    let spaces = /[ ]+/;\r\n    let validWords = text.split(spaces);\r\n    setText(validWords.join(\" \"));\r\n  };\r\n\r\n  const clearText = () => {\r\n    setText(\"\");\r\n  };\r\n\r\n  let characters = text.length;\r\n\r\n  let totalWords = text.split(\" \");\r\n  let words = totalWords.length;\r\n  totalWords.forEach((element) => {\r\n    if (element === \"\") {\r\n      words--;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container my-4\">\r\n        <div className=\"form-group my-3\">\r\n          <h2 className=\"my-3\">Utilize Your Text Here</h2>\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={changeText}\r\n            id=\"text\"\r\n            rows=\"4\"\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-success mr-3\" onClick={convertToUppercase}>\r\n          Uppercase\r\n        </button>\r\n        <button className=\"btn btn-primary mr-3\" onClick={convertToLowercase}>\r\n          Lowercase\r\n        </button>\r\n        <button className=\"btn btn-success mr-3\" onClick={convertToSentense}>\r\n          Sentense\r\n        </button>\r\n        <button className=\"btn btn-primary mr-3\" onClick={convertToTitlecase}>\r\n          Titlecase\r\n        </button>\r\n        <button className=\"btn btn-success mr-3\" onClick={copyText}>\r\n          Copy\r\n        </button>\r\n        <button className=\"btn btn-primary mr-3\" onClick={removeSpace}>\r\n          Remove Spaces\r\n        </button>\r\n        <button className=\"btn btn-danger float-right\" onClick={clearText}>\r\n          Clear\r\n        </button>\r\n      </div>\r\n      <div className=\"container\">\r\n        <span>{words}</span> Words <span>{characters}</span> Characters\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Textform from \"./components/Textform\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [mode, setmode] = useState(\"light\");\n\n  const changeMode = () => {\n    if (mode === \"light\") {\n      document.body.style.backgroundColor = \"#14457a\";\n      document.body.style.color = \"white\";\n      document.getElementById(\"mode\").innerText = \"Light Mode\";\n      setmode(\"dark\");\n    } else {\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"black\";\n      document.getElementById(\"mode\").innerText = \"Dark Mode\";\n      setmode(\"light\");\n    }\n  };\n\n  return (\n    <>\n      <Navbar mode={mode} changemode={changeMode} />\n      <Textform></Textform>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}